{{/*
Copyright 2018 The SONA Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

apiVersion: apps/v1beta1 # for versions before 1.9.0 use apps/v1beta2
kind: StatefulSet
metadata:
  generation: 1
  labels:
    run: "{{ .Release.Name }}-sona"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"     
  name: "{{ .Release.Name }}-sona"
  namespace: "{{ .Release.Namespace }}"
spec:
  serviceName: "onos-sona"
  selector:
    matchLabels:
      run: "{{ .Release.Name }}-sona"
  replicas: {{ .Values.onos.replicaCount }}
  template:
    metadata:
      labels:
        run: "{{ .Release.Name }}-sona"
    spec:
{{ if .Values.onos.node_selector.key }}
      nodeSelector:
        {{ .Values.onos.node_selector.key }}: {{ .Values.onos.node_selector.value | quote }}
{{ end }}
      hostNetwork: {{ .Values.onos.hostNetwork}}
      initContainers:
        - name: noti-ip
          image: {{ .Values.noti.image.repository }}:{{ .Values.noti.image.tag }}
          imagePullPolicy: {{ .Values.noti.image.pullPolicy }}
          command: ['sh', '-c','sleep 3; curl -X POST {{.Values.noti.uri}}:{{ .Values.clusterman.port.rest }}/leave -d "{\"nodename\":\"$MY_POD_NAME\",\"nodeip\":\"\"}";
          sleep 6; curl -X POST {{.Values.noti.uri}}:{{ .Values.clusterman.port.rest }}/join -d "{\"nodename\":\"$MY_POD_NAME\",\"nodeip\":\"$MY_POD_IP\"}"']
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
      containers:
        - name: onos-sona
          image: {{ .Values.onos.image.repository }}:{{ .Values.onos.image.tag }}
          imagePullPolicy: {{ .Values.onos.image.pullPolicy }}
          readinessProbe:
            exec:
              command: ['sh', '-c','curl --user onos:rocks -X POST -H "Content-Type:application/json" -d "{ \"nodes\" : [ {
            \"hostname\" : \"controller\",
            \"type\" : \"CONTROLLER\",
            \"managementIp\" : \"127.0.0.1\",
            \"endpoint\" : \"{{ .Values.openstack.keystone.endpoint }}\",
            \"authentication\" : {
                    \"version\" : \" {{ .Values.openstack.keystone.version }} \",
                    \"port\" : {{ .Values.openstack.keystone.port }},
                    \"protocol\" : \"HTTP\",
                    \"project\" : \"{{ .Values.openstack.project }}\",
                    \"username\" : \"{{ .Values.openstack.user }}\",
                    \"password\" : \"{{ .Values.openstack.password }}\",
                    \"perspective\" : \"PUBLIC\"
            } } ] }" http://$SONA_POD_IP:8181/onos/openstacknode/configure']
            initialDelaySeconds: 5
            periodSeconds: 5
          ports:
            - containerPort: {{ .Values.onos.port.openflow }}
            - containerPort: {{ .Values.onos.port.ovsdb }}
            - containerPort: {{ .Values.onos.port.onos_web }}
            - containerPort: {{ .Values.onos.port.onos_ssh }}
            - containerPort: {{ .Values.onos.port.onos_cluster }}
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-Dfile.encoding=UTF8 -Donos.cluster.metadata.uri=http://{{.Values.noti.uri}}:{{ .Values.clusterman.port.rest }}/cluster.json"
            - name: SONA_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      dnsPolicy: ClusterFirst
      restartPolicy: Always

